(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     78185,       1703]
NotebookOptionsPosition[     74487,       1628]
NotebookOutlinePosition[     74932,       1646]
CellTagsIndexPosition[     74889,       1643]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Linear Constraint", "Subsection",
 CellChangeTimes->{{3.921695852707377*^9, 
  3.9216958546814203`*^9}},ExpressionUUID->"57265b5f-210a-44c5-96ad-\
883d9d9c3dc7"],

Cell["\<\
Solution to the linear constraint hit time given by Equation 2.26 in Pakman \
and Paninski (2014)\
\>", "Text",
 CellChangeTimes->{{3.9705806660619993`*^9, 3.9705806720308*^9}, {
  3.9705807030694103`*^9, 
  3.970580731688375*^9}},ExpressionUUID->"b55d7ba4-e80e-43a0-8798-\
c9e73488c21e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox["q1", "2"], "+", 
     SuperscriptBox["q2", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "=", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"-", "q1"}], "/", "q2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", " ", "=", " ", 
   RowBox[{
    RowBox[{"u", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", "+", "\[Phi]"}], "]"}]}], "+", "c"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soln3", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"f3", "==", "0"}], ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"t", "/.", "soln3"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.921695994273692*^9, 3.9216960922381163`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0ff969fb-08da-4df3-955a-8e5f55e028e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{
       RowBox[{"-", 
         RowBox[{"ArcCos", "[", 
           RowBox[{"-", 
             FractionBox["c", 
              SqrtBox[
               RowBox[{
                 SuperscriptBox["q1", "2"], "+", 
                 SuperscriptBox["q2", "2"]}]]]}], "]"}]}], "+", 
       RowBox[{"ArcTan", "[", 
         FractionBox["q1", "q2"], "]"}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"}, "C"]}]}], 
     RowBox[{
       TemplateBox[{"1"}, "C"], "\[Element]", 
       TemplateBox[{}, "Integers"]}]},
    "ConditionalExpression"], ",", 
   TemplateBox[{
     RowBox[{
       RowBox[{"ArcCos", "[", 
         RowBox[{"-", 
           FractionBox["c", 
            SqrtBox[
             RowBox[{
               SuperscriptBox["q1", "2"], "+", 
               SuperscriptBox["q2", "2"]}]]]}], "]"}], "+", 
       RowBox[{"ArcTan", "[", 
         FractionBox["q1", "q2"], "]"}], "+", 
       RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"}, "C"]}]}], 
     RowBox[{
       TemplateBox[{"1"}, "C"], "\[Element]", 
       TemplateBox[{}, "Integers"]}]},
    "ConditionalExpression"]}], "}"}]], "Output",
 CellChangeTimes->{3.921696092949353*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"e690e7a3-f6a8-47b3-ae38-21a82e349294"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simple Quadratic Constraint", "Subsection",
 CellChangeTimes->{{3.921695842125222*^9, 
  3.9216958462831707`*^9}},ExpressionUUID->"f71d45dc-07db-40dd-9530-\
28e4349de657"],

Cell["\<\
Solution to the simple quadratic constraint hit time given by Equation 2.45 \
in Pakman and Paninski (2014)\
\>", "Text",
 CellChangeTimes->{{3.9705806660619993`*^9, 3.9705806720308*^9}, {
  3.9705807030694103`*^9, 
  3.9705807745912523`*^9}},ExpressionUUID->"cf0e7dc2-7a0f-4e13-8160-\
6b9ae1bd5a8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox["q1", "2"], "+", 
     SuperscriptBox["q4", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "=", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"q1", "/", "q4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", " ", 
   RowBox[{"q1", "+", 
    RowBox[{"2", "q3"}], "+", 
    RowBox[{"u", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", "t"}], "+", "\[Phi]"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soln2", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"f2", "==", "0"}], ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"t", "/.", "soln2"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.920030553704137*^9, 3.920030624670293*^9}, {
  3.920030758990512*^9, 3.920030787883172*^9}, {3.9201170491678658`*^9, 
  3.920117052436799*^9}, {3.921253412755042*^9, 3.921253417865361*^9}, {
  3.9216908399505796`*^9, 3.921690844582983*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"27974598-2e3f-41dc-80eb-aa9a8bc98b3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
         RowBox[{"\[Pi]", "+", 
           RowBox[{"ArcSin", "[", 
             FractionBox[
              RowBox[{"q1", "+", 
                RowBox[{"2", " ", "q3"}]}], 
              SqrtBox[
               RowBox[{
                 SuperscriptBox["q1", "2"], "+", 
                 SuperscriptBox["q4", "2"]}]]], "]"}], "-", 
           RowBox[{"ArcTan", "[", 
             FractionBox["q1", "q4"], "]"}], "+", 
           RowBox[{"2", " ", "\[Pi]", " ", 
             TemplateBox[{"1"}, "C"]}]}], ")"}]}], 
     RowBox[{
       TemplateBox[{"1"}, "C"], "\[Element]", 
       TemplateBox[{}, "Integers"]}]},
    "ConditionalExpression"], ",", 
   TemplateBox[{
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
         RowBox[{"ArcSin", "[", 
           FractionBox[
            RowBox[{"q1", "+", 
              RowBox[{"2", " ", "q3"}]}], 
            SqrtBox[
             RowBox[{
               SuperscriptBox["q1", "2"], "+", 
               SuperscriptBox["q4", "2"]}]]], "]"}]}], "-", 
       RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"ArcTan", "[", 
           FractionBox["q1", "q4"], "]"}]}], "+", 
       RowBox[{"\[Pi]", " ", 
         TemplateBox[{"1"}, "C"]}]}], 
     RowBox[{
       TemplateBox[{"1"}, "C"], "\[Element]", 
       TemplateBox[{}, "Integers"]}]},
    "ConditionalExpression"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.920030625828148*^9, {3.9200307722906647`*^9, 3.920030788507565*^9}, 
   3.920117059162932*^9, 3.921253418797799*^9, 3.9216908497504663`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"6182e9da-3da4-42f7-a708-a52457eb6477"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full Quadratic Constraint", "Subsection",
 CellChangeTimes->{{3.921695867171618*^9, 
  3.921695870681343*^9}},ExpressionUUID->"eb06106f-ba50-4450-9c53-\
e687ec91ab12"],

Cell["\<\
Solution to the full quadratic constraint hit time given by Equation 2.48 in \
Pakman and Paninski (2014).

Each of the 8 solutions are converted to Fortran using FortranForm and then \
copied into Python. The only changes made during copying are removing the \
Fortran line-break markers.\
\>", "Text",
 CellChangeTimes->{{3.9705806660619993`*^9, 3.9705806720308*^9}, {
  3.9705807030694103`*^9, 3.970580786261614*^9}, {3.970580817541232*^9, 
  3.970580894271119*^9}},ExpressionUUID->"266748f1-7fba-4c9f-bcbb-\
8c65d952a221"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r4", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["q1", "2"], "+", 
    SuperscriptBox["q4", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r3", "=", 
   RowBox[{
    RowBox[{"2", "q1", " ", "q2"}], " ", "+", " ", 
    RowBox[{"2", " ", "q4", "*", "q5"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{
    SuperscriptBox["q2", "2"], "+", 
    RowBox[{"2", " ", "q1", " ", "q3"}], " ", "+", 
    SuperscriptBox["q5", "2"], "-", 
    SuperscriptBox["q4", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{
    RowBox[{"2", "q2", " ", "q3"}], " ", "-", " ", 
    RowBox[{"2", " ", "q4", " ", "q5"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["q3", "2"], "-", 
    SuperscriptBox["q5", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", " ", "=", " ", 
  RowBox[{
   RowBox[{"r4", " ", 
    SuperscriptBox["cost", 
     RowBox[{"4", " "}]]}], "+", " ", 
   RowBox[{"r3", " ", 
    SuperscriptBox["cost", "3"]}], " ", "+", " ", 
   RowBox[{"r2", " ", 
    SuperscriptBox["cost", "2"]}], " ", "+", " ", 
   RowBox[{"r1", " ", "cost"}], " ", "+", " ", "r0"}]}]}], "Input",
 CellChangeTimes->{{3.920021130809658*^9, 3.920021283841247*^9}, {
  3.924783910936117*^9, 3.9247839117601423`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"8a15f63f-c998-4ade-9b35-04bf765d5b91"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["q3", "2"], "+", 
  RowBox[{
   SuperscriptBox["cost", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["q1", "2"], "+", 
     SuperscriptBox["q4", "2"]}], ")"}]}], "-", 
  SuperscriptBox["q5", "2"], "+", 
  RowBox[{"cost", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "q2", " ", "q3"}], "-", 
     RowBox[{"2", " ", "q4", " ", "q5"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["cost", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "q1", " ", "q2"}], "+", 
     RowBox[{"2", " ", "q4", " ", "q5"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["cost", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["q2", "2"], "+", 
     RowBox[{"2", " ", "q1", " ", "q3"}], "-", 
     SuperscriptBox["q4", "2"], "+", 
     SuperscriptBox["q5", "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.920021293135664*^9, 3.9200296884681673`*^9, 
  3.9200297868344584`*^9, 3.920030305370605*^9, 3.920030490556177*^9, 
  3.920030725272046*^9, 3.920117059101637*^9, 3.921695922728422*^9, 
  3.921747278784895*^9, 3.924701333983211*^9, 3.924772049274544*^9, 
  3.924783952216887*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"fda6334d-37d2-45af-ad2c-bcc51f586f7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", " ", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "==", "0"}], "/.", 
      RowBox[{"{", 
       RowBox[{"cost", "->", 
        RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.920021297661455*^9, 3.920021305780486*^9}, {
   3.920021354454363*^9, 3.920021367659541*^9}, {3.9200296751133842`*^9, 
   3.920029678421178*^9}, {3.92002977240946*^9, 3.920029813971588*^9}, {
   3.920030310925592*^9, 3.920030346505415*^9}, {3.9200304591955223`*^9, 
   3.920030485896018*^9}, {3.920030665582354*^9, 3.920030742168466*^9}, {
   3.9216958812318687`*^9, 3.9216959195167027`*^9}, {3.921747235069599*^9, 
   3.921747299919462*^9}, {3.924701279014399*^9, 3.924701296700429*^9}, 
   3.924701332165271*^9, {3.9247013963755817`*^9, 3.9247014074173117`*^9}, 
   3.924701453241544*^9, {3.970580653796619*^9, 
   3.9705806542722054`*^9}},ExpressionUUID->"27d8904f-715f-4052-8cac-\
0995b8f402cc"],

Cell["\<\
        -ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) - 
     -    Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -       (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. - 
     -    Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -       (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)) - 
     -       ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -          (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 \
+ q4**2)**2)/
     -        (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -            (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -            (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) \
+ 
     -                 12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 \
- q4**2 + q5**2)**2))/
     -             (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - \
q4*q5)**2 + 
     -                  108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                  Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                        12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + \
2*q1*q3 - q4**2 + q5**2)**2)**3
     -                      + (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                       108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                       36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                       72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                       2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                      (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                  (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 \
+ q4*q5)**2*(q3**2 - q5**2) - 
     -                     36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                     72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                     2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -             (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{
  3.920030494782817*^9, {3.920030675162211*^9, 3.9200306833195333`*^9}, {
   3.920030727410997*^9, 3.9200307435580807`*^9}, 3.920117059144813*^9, 
   3.9216959273915987`*^9, {3.921747283997917*^9, 3.921747300634377*^9}, 
   3.92470133838454*^9, {3.924701397636641*^9, 3.924701408129345*^9}, 
   3.924701453754374*^9, 3.924703977239203*^9, 3.924772052997497*^9, 
   3.924783955658092*^9},
 CellLabel->
  "Out[87]//FortranForm=",ExpressionUUID->"07657b65-e0ca-40f7-a414-\
2b058a4cc16e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9216959427091017`*^9, 3.921695942884831*^9}, {
   3.9217474103844147`*^9, 3.921747410683896*^9}, 3.924701303357407*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"d97f026d-9763-4fcb-846b-4eaf09117aac"],

Cell["\<\
        ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) - 
     -   Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -      (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. - 
     -   Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -      (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)) - 
     -      ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -         (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 + \
q4**2)**2)/
     -       (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -           (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + \

     -           (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -            (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 \
+ 
     -                 108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                 Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                       (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                   (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                      108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                      36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                      72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                      2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -           (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -               Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 \
+ q4**2)*(q3**2 - q5**2) + 
     -                     (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                 (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                    36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) - 
     -                    72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) + 
     -                    2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -            (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{3.921695943431809*^9, 3.921747414185628*^9, 
  3.9247014961338387`*^9, 3.9247720594912643`*^9, 3.9247839620845823`*^9},
 CellLabel->
  "Out[88]//FortranForm=",ExpressionUUID->"185656e7-9464-4104-82a6-\
767a989648ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92169595113313*^9, 3.921695951332736*^9}, {
   3.921747420784*^9, 3.921747425598936*^9}, 3.9247013089439697`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"b6d38fca-b43a-4243-b4d1-685c0840da96"],

Cell["\<\
        -ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) - 
     -    Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -       (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. + 
     -    Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -       (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)) - 
     -       ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -          (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 \
+ q4**2)**2)/
     -        (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -            (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -            (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) \
+ 
     -                 12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 \
- q4**2 + q5**2)**2))/
     -             (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - \
q4*q5)**2 + 
     -                  108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                  Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                        12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + \
2*q1*q3 - q4**2 + q5**2)**2)**3
     -                      + (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                       108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                       36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                       72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                       2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                      (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                  (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 \
+ q4*q5)**2*(q3**2 - q5**2) - 
     -                     36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                     72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                     2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -             (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{3.9216959518615017`*^9, 3.92174742622867*^9, 
  3.9247015208303127`*^9, 3.924772066205616*^9, 3.924783966141881*^9},
 CellLabel->
  "Out[89]//FortranForm=",ExpressionUUID->"708d4d10-0872-499c-ba58-\
99d850d09231"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.921695958059474*^9, 3.9216959583735332`*^9}, {
   3.9217474305836782`*^9, 3.921747430916114*^9}, 3.924701316946673*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"de5eb17a-7c81-4a24-b358-d4ff1d95c0e1"],

Cell["\<\
        ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) - 
     -   Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -      (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. + 
     -   Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -      (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)) - 
     -      ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -         (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 + \
q4**2)**2)/
     -       (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -           (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + \

     -           (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -            (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 \
+ 
     -                 108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                 Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                       (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                   (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                      108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                      36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                      72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                      2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -           (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -               Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 \
+ q4**2)*(q3**2 - q5**2) + 
     -                     (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                 (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                    36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) - 
     -                    72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) + 
     -                    2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -            (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{3.921695959155465*^9, 3.9217474322198153`*^9, 
  3.924701545549415*^9, 3.924772072256377*^9, 3.9247839698503036`*^9},
 CellLabel->
  "Out[90]//FortranForm=",ExpressionUUID->"9dbab1f0-d11c-4216-9eb4-\
2ddbe0c85317"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924704142039935*^9, 3.924704142199355*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"74c91365-985e-4f79-8660-b2e01e91d89a"],

Cell["\<\
        -ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) + 
     -    Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -       (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. - 
     -    Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -       (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)) + 
     -       ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -          (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 \
+ q4**2)**2)/
     -        (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -            (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -            (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) \
+ 
     -                 12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 \
- q4**2 + q5**2)**2))/
     -             (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - \
q4*q5)**2 + 
     -                  108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                  Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                        12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + \
2*q1*q3 - q4**2 + q5**2)**2)**3
     -                      + (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                       108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                       36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                       72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                       2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                      (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                  (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 \
+ q4*q5)**2*(q3**2 - q5**2) - 
     -                     36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                     72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                     2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -             (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{3.924704160463819*^9, 3.924772083623123*^9, 
  3.924783974126357*^9},
 CellLabel->
  "Out[91]//FortranForm=",ExpressionUUID->"c7d2d0b8-2b01-44b2-bc63-\
33fcc87718fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "6", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924704151543334*^9, 3.9247041524720173`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"b4f03895-b1a7-4a45-8a80-5da31f29a746"],

Cell["\<\
        ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) + 
     -   Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -      (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. - 
     -   Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -      (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)) + 
     -      ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -         (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 + \
q4**2)**2)/
     -       (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -           (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + \

     -           (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -            (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 \
+ 
     -                 108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                 Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                       (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                   (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                      108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                      36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                      72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                      2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -           (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -               Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 \
+ q4**2)*(q3**2 - q5**2) + 
     -                     (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                 (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                    36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) - 
     -                    72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) + 
     -                    2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -            (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{3.9247041853958683`*^9, 3.9247720890424147`*^9, 
  3.9247839777468863`*^9},
 CellLabel->
  "Out[92]//FortranForm=",ExpressionUUID->"d7ac2c28-f88c-4526-81c7-\
da04b2fb0a35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "7", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924704154711467*^9, 3.924704154991995*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"08a04f67-5f73-4f21-b9bb-b080aa38c40c"],

Cell["\<\
        -ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) + 
     -    Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -       (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. + 
     -    Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -       (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -       (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -            12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -        (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -             108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -             36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -             72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -             2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -             Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                   (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -               (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -       (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -           36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -           72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -           2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -           Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                 (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -             (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -        (3.*2**0.3333333333333333*(q1**2 + q4**2)) + 
     -       ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -          (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 \
+ q4**2)**2)/
     -        (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -            (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -            (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) \
+ 
     -                 12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 \
- q4**2 + q5**2)**2))/
     -             (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - \
q4*q5)**2 + 
     -                  108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                  36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                  72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                  2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                  Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                        12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + \
2*q1*q3 - q4**2 + q5**2)**2)**3
     -                      + (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                       108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                       36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                       72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                       2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                      (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                  (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 \
+ q4*q5)**2*(q3**2 - q5**2) - 
     -                     36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                     72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                     2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -             (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{3.924704200253529*^9, 3.924772093516891*^9, 
  3.9247839811067038`*^9},
 CellLabel->
  "Out[93]//FortranForm=",ExpressionUUID->"4ca03171-c6f3-4fd6-9106-\
c9957f9d5eb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", "8", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9247041570562563`*^9, 3.924704157496407*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"64e24cb7-f2f7-4077-bde3-3d4e55eb7419"],

Cell["\<\
        ArcCos(-0.5*(q1*q2 + q4*q5)/(q1**2 + q4**2) + 
     -   Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -      (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)))/2. + 
     -   Sqrt((2*(q1*q2 + q4*q5)**2)/(q1**2 + q4**2)**2 - 
     -      (4*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) - 
     -      (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -           12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -       (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -            108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -            36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) - 
     -            72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 \
+ q5**2) + 
     -            2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -            Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                  (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -              (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) - 
     -      (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -          36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) - 
     -          72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2) + 
     -          2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -          Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 + \
q4**2)*(q3**2 - q5**2) + 
     -                (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -            (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -       (3.*2**0.3333333333333333*(q1**2 + q4**2)) + 
     -      ((-8*(q1*q2 + q4*q5)**3)/(q1**2 + q4**2)**3 + (16*(-(q2*q3) + \
q4*q5))/(q1**2 + q4**2) + 
     -         (8*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(q1**2 + \
q4**2)**2)/
     -       (4.*Sqrt((q1*q2 + q4*q5)**2/(q1**2 + q4**2)**2 - 
     -           (2*(q2**2 + 2*q1*q3 - q4**2 + q5**2))/(3.*(q1**2 + q4**2)) + \

     -           (2**0.3333333333333333*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 
     -                12*(q1**2 + q4**2)*(q3**2 - q5**2) + (q2**2 + 2*q1*q3 - \
q4**2 + q5**2)**2))/
     -            (3.*(q1**2 + q4**2)*(108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 \
+ 
     -                 108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                 36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -                 72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -                 2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -                 Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + \
12*(q1**2 + q4**2)*(q3**2 - q5**2) + 
     -                       (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                   (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 
     -                      108*(q1*q2 + q4*q5)**2*(q3**2 - q5**2) - 
     -                      36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) - 
     -                      72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + \
2*q1*q3 - q4**2 + q5**2) + 
     -                      2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333) + 
     -           (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -               36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) - 
     -               72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 - \
q4**2 + q5**2) + 
     -               2*(q2**2 + 2*q1*q3 - q4**2 + q5**2)**3 + 
     -               Sqrt(-4*(-12*(q2*q3 - q4*q5)*(q1*q2 + q4*q5) + 12*(q1**2 \
+ q4**2)*(q3**2 - q5**2) + 
     -                     (q2**2 + 2*q1*q3 - q4**2 + q5**2)**2)**3 + 
     -                 (108*(q1**2 + q4**2)*(q2*q3 - q4*q5)**2 + 108*(q1*q2 + \
q4*q5)**2*(q3**2 - q5**2) - 
     -                    36*(q2*q3 - q4*q5)*(q1*q2 + q4*q5)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) - 
     -                    72*(q1**2 + q4**2)*(q3**2 - q5**2)*(q2**2 + 2*q1*q3 \
- q4**2 + q5**2) + 
     -                    2*(q2**2 + 2*q1*q3 - q4**2 + \
q5**2)**3)**2))**0.3333333333333333/
     -            (3.*2**0.3333333333333333*(q1**2 + q4**2)))))/2.)\
\>", "Output",
 CellChangeTimes->{3.924704213901025*^9, 3.924772097545233*^9, 
  3.924783984952806*^9},
 CellLabel->
  "Out[94]//FortranForm=",ExpressionUUID->"f1e8b3f6-c964-4e61-9895-\
bd965f9c82ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "soln", "]"}]], "Input",
 CellChangeTimes->{{3.921758540218051*^9, 3.921758543304427*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"075d3d1a-1a9b-4679-938f-9ba90d6aa468"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.921758544059338*^9, 3.9247040065932198`*^9, 
  3.9247721027713737`*^9, 3.924783988273658*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"e809c022-cd66-4a25-9292-8ac75fe347b4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1512, 916},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"14.3 for Mac OS X ARM (64-bit) (July 8, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ec09d89d-7387-4fc2-8235-421fe55bb8e7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 167, 3, 53, "Subsection",ExpressionUUID->"57265b5f-210a-44c5-96ad-883d9d9c3dc7"],
Cell[750, 27, 298, 7, 33, "Text",ExpressionUUID->"b55d7ba4-e80e-43a0-8798-c9e73488c21e"],
Cell[CellGroupData[{
Cell[1073, 38, 1006, 29, 133, "Input",ExpressionUUID->"0ff969fb-08da-4df3-955a-8e5f55e028e2"],
Cell[2082, 69, 1329, 39, 61, "Output",ExpressionUUID->"e690e7a3-f6a8-47b3-ae38-21a82e349294"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3460, 114, 177, 3, 53, "Subsection",ExpressionUUID->"f71d45dc-07db-40dd-9530-28e4349de657"],
Cell[3640, 119, 310, 7, 33, "Text",ExpressionUUID->"cf0e7dc2-7a0f-4e13-8160-6b9ae1bd5a8c"],
Cell[CellGroupData[{
Cell[3975, 130, 1195, 31, 113, "Input",ExpressionUUID->"27974598-2e3f-41dc-80eb-aa9a8bc98b3c"],
Cell[5173, 163, 1771, 50, 65, "Output",ExpressionUUID->"6182e9da-3da4-42f7-a708-a52457eb6477"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6993, 219, 173, 3, 53, "Subsection",ExpressionUUID->"eb06106f-ba50-4450-9c53-e687ec91ab12"],
Cell[7169, 224, 536, 11, 77, "Text",ExpressionUUID->"266748f1-7fba-4c9f-bcbb-8c65d952a221"],
Cell[CellGroupData[{
Cell[7730, 239, 1451, 40, 131, "Input",ExpressionUUID->"8a15f63f-c998-4ade-9b35-04bf765d5b91"],
Cell[9184, 281, 1244, 34, 35, "Output",ExpressionUUID->"fda6334d-37d2-45af-ad2c-bcc51f586f7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10465, 320, 1450, 36, 70, "Input",ExpressionUUID->"27d8904f-715f-4052-8cac-0995b8f402cc"],
Cell[11918, 358, 7621, 144, 1451, "Output",ExpressionUUID->"07657b65-e0ca-40f7-a414-2b058a4cc16e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19576, 507, 506, 13, 29, "Input",ExpressionUUID->"d97f026d-9763-4fcb-846b-4eaf09117aac"],
Cell[20085, 522, 7269, 139, 1451, "Output",ExpressionUUID->"185656e7-9464-4104-82a6-767a989648ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27391, 666, 500, 13, 29, "Input",ExpressionUUID->"b6d38fca-b43a-4243-b4d1-685c0840da96"],
Cell[27894, 681, 7349, 139, 1451, "Output",ExpressionUUID->"708d4d10-0872-499c-ba58-99d850d09231"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35280, 825, 506, 13, 29, "Input",ExpressionUUID->"de5eb17a-7c81-4a24-b358-d4ff1d95c0e1"],
Cell[35789, 840, 7267, 139, 1451, "Output",ExpressionUUID->"9dbab1f0-d11c-4216-9eb4-2ddbe0c85317"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43093, 984, 430, 12, 29, "Input",ExpressionUUID->"74c91365-985e-4f79-8660-b2e01e91d89a"],
Cell[43526, 998, 7302, 139, 1451, "Output",ExpressionUUID->"c7d2d0b8-2b01-44b2-bc63-33fcc87718fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50865, 1142, 432, 12, 29, "Input",ExpressionUUID->"b4f03895-b1a7-4a45-8a80-5da31f29a746"],
Cell[51300, 1156, 7225, 139, 1451, "Output",ExpressionUUID->"d7ac2c28-f88c-4526-81c7-da04b2fb0a35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58562, 1300, 430, 12, 29, "Input",ExpressionUUID->"08a04f67-5f73-4f21-b9bb-b080aa38c40c"],
Cell[58995, 1314, 7304, 139, 1451, "Output",ExpressionUUID->"4ca03171-c6f3-4fd6-9106-c9957f9d5eb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66336, 1458, 432, 12, 29, "Input",ExpressionUUID->"64e24cb7-f2f7-4077-bde3-3d4e55eb7419"],
Cell[66771, 1472, 7219, 139, 1451, "Output",ExpressionUUID->"f1e8b3f6-c964-4e61-9895-bd965f9c82ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74027, 1616, 207, 3, 29, "Input",ExpressionUUID->"075d3d1a-1a9b-4679-938f-9ba90d6aa468"],
Cell[74237, 1621, 222, 3, 33, "Output",ExpressionUUID->"e809c022-cd66-4a25-9292-8ac75fe347b4"]
}, Open  ]]
}, Open  ]]
}
]
*)

