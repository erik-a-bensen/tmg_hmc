name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-15, windows-2022]
        arch: [x86_64, arm64]

    steps:
      - uses: actions/checkout@v4

      - name: Set environment for cibuildwheel
        run: |
          echo "CIBW_TEST_SKIP=" >> $GITHUB_ENV
          if [[ "${{ matrix.os }}" == "macos-15" && "${{ matrix.arch }}" == "arm64" ]]; then
            # Skip testing on arm64 if runner cannot test natively
            echo "CIBW_TEST_SKIP=*-macosx_arm64" >> $GITHUB_ENV
          fi

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21
        with:
          output-dir: ./wheelhouse
          python-version: "cp310-* cp311-* cp312-* cp313-*"
        
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "*"
          merge-multiple: true
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
